<!DOCTYPE html>

@using EquipmentManagementSystem.Domain.Service
@inject Localizer Localizer

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <script src="~/js/Index-Table.min.js" type="text/javascript"></script>
    <script>

        
        $('document').ready(function () {

            ReloadTable(@Model.TotalPages);
            PreventDoubleClick();
        });

        // Prevents doubleclicking from selecting text in table
        function PreventDoubleClick() {

            var table = document.getElementById('table');
            table.addEventListener('mousedown', function (event) {

                if (event.detail > 1 && event.ctrlKey == false) {

                    event.preventDefault();
                }
                // Ctrl click selecting rows for delete/export
                else if (event.ctrlKey) {

                    event.preventDefault();
                    var $target = $(event.target).closest('tr');

                    if ($target.hasClass("SelectedRow")) {
                        $target.removeClass("SelectedRow");
                    }
                    else {
                        $target.addClass("SelectedRow");
                    }

                    var rowItems = $('.SelectedRow');

                    if (rowItems.length > 0) {

                        document.getElementById("selectionButtons").style.display = "";
                    }
                    else {
                        document.getElementById("selectionButtons").style.display = "none";
                    }
                }
            }, false);
        };


      
        function PostTable(uri, searchString, currentSort) {

            var tableView = "@Html.Raw(Url.Action("Table", new { sortVariable = "_Sort_", searchString = "_Search_", page = "_Page_" }))"
                .replace("_Sort_", encodeURIComponent(currentSort))
                .replace("_Search_", encodeURIComponent(searchString))
                .replace("_Page_", encodeURIComponent(uri));


            $('#partialTable').load(tableView);
            ReloadTable(@Model.TotalPages);
        };


        function ReloadTable(totalPages) {

            var curPage = document.getElementById("CurPage").textContent;

                $('a.sortLink').click(function (e) {

                    e.preventDefault();
                    Sort(e.target.id.toString());
                });

            var lastPos = totalPages -1;

            var posList = [0, lastPos];

            var startList = document.getElementById('startList');
            var endList = document.getElementById('endList');
            var curList = document.getElementById('curList');

            startList.innerHTML = '';
            endList.innerHTML = '';
            curList.innerHTML = '';

            for (var i = (curPage - 2); i < (curPage + 3); i++) {

                if (i < 1) {
                    i++;
                }
                if (i > 0 && i < lastPos) {
                    posList.push(i);
                }
            }

            for (var i = 0; i < posList.length; i++) {

                var a = document.createElement('a');
                a.appendChild(document.createTextNode(posList[i]));

                a.classList = posList[i] == curPage ? "CurPage" : "PageLink";

                //a.onclick = "PageClick(_test_)".replace("_test_", a.textContent);
                //a.href = "";
                a.href = "javascript:PageClick(_Obj_)"
                    .replace("_Obj_", a.textContent);

                if (i == 0 && posList[i] != curPage) {

                    startList.appendChild(a);
                }
                else if (i == 1) {

                    endList.appendChild(a);
                }
                else {

                    if (posList[i] == curPage) {
                        var text = document.createTextNode(posList[i]);
                        curList.appendChild(text);
                    }
                    else {
                        curList.appendChild(a);
                    }
                }

            }
        };

        function PageClick(page) {

            let curSort = document.getElementById("CurrentSort") == null ? "" : document.getElementById("CurrentSort").textContent;
            let searchString = document.getElementById("SearchString") == null ? "" : document.getElementById("SearchString").textContent;
            PostTable(page, searchString, curSort);
        };


        function Sort(value) {

            let curSort = document.getElementById("CurrentSort").textContent;
            let searchString = document.getElementById("SearchString").textContent;

            switch (value) {

                case "Date":

                    sortVariable = curSort == "Date_desc" ? "Date" : "Date_desc";
                    PostTable("@ViewData["Page"]", searchString, sortVariable.toString());
                    break;

                case "Owner":

                    sortVariable = curSort == "Owner_desc" ? "Owner" : "Owner_desc";
                    PostTable("@ViewData["Page"]", searchString, sortVariable.toString());
                    break;

                default:

                    PostTable("0", "", "Date_desc");
                    break;
            }

        };


        $("#selectionDelete").click( function (event) {


            var table = document.getElementById("deleteTable");
            var rowItems = $(".SelectedRow");

            for (var i = 0; i < rowItems.length; i++) {

                var model = rowItems[i].cells[1].innerHTML;
                var serial = rowItems[i].cells[2].innerHTML;
                var owner = rowItems[i].cells[3].innerHTML;

                var row = document.createElement("tr");
                var cell = document.createElement("td");

                cell.innerHTML = model;
                row.append(cell);
                cell = document.createElement("td");
                cell.innerHTML = serial;
                row.append(cell);
                cell = document.createElement("td");
                cell.innerHTML = owner;
                row.append(cell);

                table.appendChild(row);
            }

            $.getScript("/js/ConfirmationDialogue.js", function () {
                ConfirmClickGeneric(Delete, '#deleteDialog', 900);
            });

        });


        function Delete() {

            var rows = document.getElementById("deleteTable");
            var serial = Array();

            for (var i = 0, row; row = rows.rows[i]; i++) {

                serial[i] = row.cells[1].innerHTML;
            }

            $.post("@Url.Action("DeleteSelection", "Home", new { serial = "_serials_" })"
                .replace("_serials_", encodeURIComponent(serial)), function (response) {

                    switch (response) {
                        case true:
                            windows.location.href = "@Url.Action("Index")";
                        case null:
                            alert("Deletion failed");
                            break;
                        default:
                    }
                });
        };

        $("#selectionExport").click(function() {

            $.getScript("/js/ConfirmationDialogue.js", function () {
                ConfirmClickGeneric(Export, '#exportDialog');
            });
        });
    </script>
</head>
<body>
    <div id="partialTable">    @RenderBody()</div>
    @RenderSection("Scripts", false/*required*/)
</body>
</html>