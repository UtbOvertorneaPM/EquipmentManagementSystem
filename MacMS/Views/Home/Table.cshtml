@using EquipmentManagementSystem.Models
@model PagedList<Equipment>
@using EquipmentManagementSystem.Data
@inject Localizer Localizer

@{
    //Layout = null;
    Layout = "~/Views/Shared/_partialTableLayout.cshtml";
}


@section Scripts {

    <script src="~/js/Index-Table.js" type="text/javascript"></script>

    <script type="text/javascript">
        
        
        $('document').ready(function () {

            var curPage = @Model.Page == -1 ? 0 : @Model.Page;

            var count = @Model.TotalPages;
            var lastPos = @Model.TotalPages - 1;

            var posList = [0, lastPos];

            for (var i = (curPage - 2); i < (curPage + 3); i++) {

                if (i < 1) {
                    i++;
                }
                if (i > 0 && i < lastPos) {
                    posList.push(i);
                }
            }

            for (var i = 0; i < posList.length; i++) {

                var a = document.createElement('a');
                a.appendChild(document.createTextNode(posList[i]));

                a.classList = posList[i] == curPage ? "CurPage" : "PageLink";

                a.href = "javascript:PostTable(_linkUri_, _searchValue_, _sortValue_)"
                    .replace("_linkUri_", posList[i])
                    .replace("_searchValue_", "@ViewData["SearchString"]")
                    .replace("_sortValue_", "@ViewData["CurrentSort"]");
                
                if (i == 0 && posList[i] != curPage) {

                    document.getElementById('startList').appendChild(a);
                }
                else if (i == 1) {

                    document.getElementById('endList').appendChild(a);
                }
                else {

                    if (posList[i] == curPage) {
                        var text = document.createTextNode(posList[i]);
                        document.getElementById('curList').appendChild(text);
                    }
                    else {
                        document.getElementById('curList').appendChild(a);
                    }
                }

            }
                var original = document.getElementById('pageList');
                var clone = original.cloneNode(true);
                clone.id = "clone";
                document.getElementById('pageListClone').appendChild(clone);
        });

        function PostTable(uri, searchString, currentSort) {
            
            var tableView = "@Html.Raw(Url.Action("Table", "Home", new { sortVariable = "_Sort_", searchString = "_Search_", page = "_Page_" }))"
                .replace("_Sort_", encodeURIComponent(currentSort))
                .replace("_Search_", encodeURIComponent(searchString))
                .replace("_Page_", encodeURIComponent(uri));

            $.get(tableView,
                function (data) {
                    $('table').replaceWith(data);
                }
            )
        };

        $('a.sortLink').click(function (e) {

            e.preventDefault();
            Sort(e.target.id.toString());
        });

        function Sort(value) {

            alert("wth");
            switch (value) {

                case "Date":

                    sortVariable = "@ViewData["CurrentSort"]" == "Date_desc" ? "Date_desc" : "Date";
                    PostTable("@ViewData["Page"]", "@ViewData["SearchString"]", sortVariable.toString());
                    break;

                case "Owner":
                    alert("wots dis then");
                    sortVariable = "@ViewData["CurrentSort"]" == "Owner" ? "Owner_desc" : "Owner"
                    PostTable("@ViewData["Page"]", "@ViewData["SearchString"]", sortVariable.toString());
                    break;

                default:

                    PostTable("0", "", "Date_desc");
                    break;
            }
            
        };

    </script>
}

@if (@Model.TotalPages > 1) {

    <div style="float:left" id="pageList">
        <div style="float:left" id="startList"></div>
        <div style="float:left" id="curList"></div>
        <div style="float:left" id="endList"></div>
    </div>
}

<table class="table NoPaddingMargin" id="table">
    <thead>
        <tr>
            <th>
                <a href="#" class="sortLink" id="Date">
                    @Localizer["Date"]
                </a>
            </th>
            <th>
                @Localizer["Model"]
            </th>
            <th>
                @Localizer["Serial"]
            </th>
            <th>
                <a href="#" class="sortLink" id="Owner">
                    @Localizer["Owner"]
                </a>
            </th>
            <th>
                @Localizer["EquipType"]
            </th>
            <th class="Actions">
            </th>
        </tr>
    </thead>
    @foreach (var item in Model) {
        <tr id="toprow" class="ParentRow">
            <td>
                @Html.DisplayFor(modelItem => item.LastEdited)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Serial)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EquipType)
            </td>
            <td class="Actions">
                @Html.ActionLink(Localizer["Edit"], "Edit", new { id = item.ID, culture = ViewData["Language"] }) |
                @Html.ActionLink(Localizer["Delete"], "Delete", new { id = item.ID, culture = ViewData["Language"] })
            </td>
        </tr>

        <tr class="ChildRow">
            <td colspan="5">@Html.DisplayFor(modelItem => item.Notes)</td>
        </tr>
    }
</table>
@if (@Model.TotalPages > 1) {

    <div style="float:left" id="pageListClone">

    </div>
}
<hr />

